//
// Licensed to the Apache Software Foundation (ASF) under one or more
// contributor license agreements.  See the NOTICE file distributed with
// this work for additional information regarding copyright ownership.
// The ASF licenses this file to You under the Apache License, Version 2.0
// (the "License"); you may not use this file except in compliance with
// the License.  You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: DataFormats.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LedgerMetadataFormat_State int32

const (
	LedgerMetadataFormat_OPEN        LedgerMetadataFormat_State = 1
	LedgerMetadataFormat_IN_RECOVERY LedgerMetadataFormat_State = 2
	LedgerMetadataFormat_CLOSED      LedgerMetadataFormat_State = 3
)

// Enum value maps for LedgerMetadataFormat_State.
var (
	LedgerMetadataFormat_State_name = map[int32]string{
		1: "OPEN",
		2: "IN_RECOVERY",
		3: "CLOSED",
	}
	LedgerMetadataFormat_State_value = map[string]int32{
		"OPEN":        1,
		"IN_RECOVERY": 2,
		"CLOSED":      3,
	}
)

func (x LedgerMetadataFormat_State) Enum() *LedgerMetadataFormat_State {
	p := new(LedgerMetadataFormat_State)
	*p = x
	return p
}

func (x LedgerMetadataFormat_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LedgerMetadataFormat_State) Descriptor() protoreflect.EnumDescriptor {
	return file_DataFormats_proto_enumTypes[0].Descriptor()
}

func (LedgerMetadataFormat_State) Type() protoreflect.EnumType {
	return &file_DataFormats_proto_enumTypes[0]
}

func (x LedgerMetadataFormat_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LedgerMetadataFormat_State) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LedgerMetadataFormat_State(num)
	return nil
}

// Deprecated: Use LedgerMetadataFormat_State.Descriptor instead.
func (LedgerMetadataFormat_State) EnumDescriptor() ([]byte, []int) {
	return file_DataFormats_proto_rawDescGZIP(), []int{0, 0}
}

type LedgerMetadataFormat_DigestType int32

const (
	LedgerMetadataFormat_CRC32  LedgerMetadataFormat_DigestType = 1
	LedgerMetadataFormat_HMAC   LedgerMetadataFormat_DigestType = 2
	LedgerMetadataFormat_CRC32C LedgerMetadataFormat_DigestType = 3
	LedgerMetadataFormat_DUMMY  LedgerMetadataFormat_DigestType = 4
)

// Enum value maps for LedgerMetadataFormat_DigestType.
var (
	LedgerMetadataFormat_DigestType_name = map[int32]string{
		1: "CRC32",
		2: "HMAC",
		3: "CRC32C",
		4: "DUMMY",
	}
	LedgerMetadataFormat_DigestType_value = map[string]int32{
		"CRC32":  1,
		"HMAC":   2,
		"CRC32C": 3,
		"DUMMY":  4,
	}
)

func (x LedgerMetadataFormat_DigestType) Enum() *LedgerMetadataFormat_DigestType {
	p := new(LedgerMetadataFormat_DigestType)
	*p = x
	return p
}

func (x LedgerMetadataFormat_DigestType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LedgerMetadataFormat_DigestType) Descriptor() protoreflect.EnumDescriptor {
	return file_DataFormats_proto_enumTypes[1].Descriptor()
}

func (LedgerMetadataFormat_DigestType) Type() protoreflect.EnumType {
	return &file_DataFormats_proto_enumTypes[1]
}

func (x LedgerMetadataFormat_DigestType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LedgerMetadataFormat_DigestType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LedgerMetadataFormat_DigestType(num)
	return nil
}

// Deprecated: Use LedgerMetadataFormat_DigestType.Descriptor instead.
func (LedgerMetadataFormat_DigestType) EnumDescriptor() ([]byte, []int) {
	return file_DataFormats_proto_rawDescGZIP(), []int{0, 1}
}

//*
// Metadata format for storing ledger information
type LedgerMetadataFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QuorumSize     *int32                                   `protobuf:"varint,1,req,name=quorumSize" json:"quorumSize,omitempty"`
	EnsembleSize   *int32                                   `protobuf:"varint,2,req,name=ensembleSize" json:"ensembleSize,omitempty"`
	Length         *int64                                   `protobuf:"varint,3,req,name=length" json:"length,omitempty"`
	LastEntryId    *int64                                   `protobuf:"varint,4,opt,name=lastEntryId" json:"lastEntryId,omitempty"`
	State          *LedgerMetadataFormat_State              `protobuf:"varint,5,req,name=state,enum=LedgerMetadataFormat_State,def=1" json:"state,omitempty"`
	Segment        []*LedgerMetadataFormat_Segment          `protobuf:"bytes,6,rep,name=segment" json:"segment,omitempty"`
	DigestType     *LedgerMetadataFormat_DigestType         `protobuf:"varint,7,opt,name=digestType,enum=LedgerMetadataFormat_DigestType" json:"digestType,omitempty"`
	Password       []byte                                   `protobuf:"bytes,8,opt,name=password" json:"password,omitempty"`
	AckQuorumSize  *int32                                   `protobuf:"varint,9,opt,name=ackQuorumSize" json:"ackQuorumSize,omitempty"`
	Ctime          *int64                                   `protobuf:"varint,10,opt,name=ctime" json:"ctime,omitempty"`
	CustomMetadata []*LedgerMetadataFormatCMetadataMapEntry `protobuf:"bytes,11,rep,name=customMetadata" json:"customMetadata,omitempty"`
	CToken         *int64                                   `protobuf:"varint,12,opt,name=cToken" json:"cToken,omitempty"`
}

// Default values for LedgerMetadataFormat fields.
const (
	Default_LedgerMetadataFormat_State = LedgerMetadataFormat_OPEN
)

func (x *LedgerMetadataFormat) Reset() {
	*x = LedgerMetadataFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataFormats_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LedgerMetadataFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerMetadataFormat) ProtoMessage() {}

func (x *LedgerMetadataFormat) ProtoReflect() protoreflect.Message {
	mi := &file_DataFormats_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerMetadataFormat.ProtoReflect.Descriptor instead.
func (*LedgerMetadataFormat) Descriptor() ([]byte, []int) {
	return file_DataFormats_proto_rawDescGZIP(), []int{0}
}

func (x *LedgerMetadataFormat) GetQuorumSize() int32 {
	if x != nil && x.QuorumSize != nil {
		return *x.QuorumSize
	}
	return 0
}

func (x *LedgerMetadataFormat) GetEnsembleSize() int32 {
	if x != nil && x.EnsembleSize != nil {
		return *x.EnsembleSize
	}
	return 0
}

func (x *LedgerMetadataFormat) GetLength() int64 {
	if x != nil && x.Length != nil {
		return *x.Length
	}
	return 0
}

func (x *LedgerMetadataFormat) GetLastEntryId() int64 {
	if x != nil && x.LastEntryId != nil {
		return *x.LastEntryId
	}
	return 0
}

func (x *LedgerMetadataFormat) GetState() LedgerMetadataFormat_State {
	if x != nil && x.State != nil {
		return *x.State
	}
	return Default_LedgerMetadataFormat_State
}

func (x *LedgerMetadataFormat) GetSegment() []*LedgerMetadataFormat_Segment {
	if x != nil {
		return x.Segment
	}
	return nil
}

func (x *LedgerMetadataFormat) GetDigestType() LedgerMetadataFormat_DigestType {
	if x != nil && x.DigestType != nil {
		return *x.DigestType
	}
	return LedgerMetadataFormat_CRC32
}

func (x *LedgerMetadataFormat) GetPassword() []byte {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *LedgerMetadataFormat) GetAckQuorumSize() int32 {
	if x != nil && x.AckQuorumSize != nil {
		return *x.AckQuorumSize
	}
	return 0
}

func (x *LedgerMetadataFormat) GetCtime() int64 {
	if x != nil && x.Ctime != nil {
		return *x.Ctime
	}
	return 0
}

func (x *LedgerMetadataFormat) GetCustomMetadata() []*LedgerMetadataFormatCMetadataMapEntry {
	if x != nil {
		return x.CustomMetadata
	}
	return nil
}

func (x *LedgerMetadataFormat) GetCToken() int64 {
	if x != nil && x.CToken != nil {
		return *x.CToken
	}
	return 0
}

type LedgerRereplicationLayoutFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    *string `protobuf:"bytes,1,req,name=type" json:"type,omitempty"`
	Version *int32  `protobuf:"varint,2,req,name=version" json:"version,omitempty"`
}

func (x *LedgerRereplicationLayoutFormat) Reset() {
	*x = LedgerRereplicationLayoutFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataFormats_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LedgerRereplicationLayoutFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerRereplicationLayoutFormat) ProtoMessage() {}

func (x *LedgerRereplicationLayoutFormat) ProtoReflect() protoreflect.Message {
	mi := &file_DataFormats_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerRereplicationLayoutFormat.ProtoReflect.Descriptor instead.
func (*LedgerRereplicationLayoutFormat) Descriptor() ([]byte, []int) {
	return file_DataFormats_proto_rawDescGZIP(), []int{1}
}

func (x *LedgerRereplicationLayoutFormat) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *LedgerRereplicationLayoutFormat) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type UnderreplicatedLedgerFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Replica []string `protobuf:"bytes,1,rep,name=replica" json:"replica,omitempty"`
	Ctime   *int64   `protobuf:"varint,2,opt,name=ctime" json:"ctime,omitempty"`
}

func (x *UnderreplicatedLedgerFormat) Reset() {
	*x = UnderreplicatedLedgerFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataFormats_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnderreplicatedLedgerFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnderreplicatedLedgerFormat) ProtoMessage() {}

func (x *UnderreplicatedLedgerFormat) ProtoReflect() protoreflect.Message {
	mi := &file_DataFormats_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnderreplicatedLedgerFormat.ProtoReflect.Descriptor instead.
func (*UnderreplicatedLedgerFormat) Descriptor() ([]byte, []int) {
	return file_DataFormats_proto_rawDescGZIP(), []int{2}
}

func (x *UnderreplicatedLedgerFormat) GetReplica() []string {
	if x != nil {
		return x.Replica
	}
	return nil
}

func (x *UnderreplicatedLedgerFormat) GetCtime() int64 {
	if x != nil && x.Ctime != nil {
		return *x.Ctime
	}
	return 0
}

//*
// Cookie format for storing cookie information
type CookieFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookieHost *string `protobuf:"bytes,1,req,name=bookieHost" json:"bookieHost,omitempty"`
	JournalDir *string `protobuf:"bytes,2,req,name=journalDir" json:"journalDir,omitempty"`
	LedgerDirs *string `protobuf:"bytes,3,req,name=ledgerDirs" json:"ledgerDirs,omitempty"`
	InstanceId *string `protobuf:"bytes,4,opt,name=instanceId" json:"instanceId,omitempty"`
	IndexDirs  *string `protobuf:"bytes,5,opt,name=indexDirs" json:"indexDirs,omitempty"`
}

func (x *CookieFormat) Reset() {
	*x = CookieFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataFormats_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CookieFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CookieFormat) ProtoMessage() {}

func (x *CookieFormat) ProtoReflect() protoreflect.Message {
	mi := &file_DataFormats_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CookieFormat.ProtoReflect.Descriptor instead.
func (*CookieFormat) Descriptor() ([]byte, []int) {
	return file_DataFormats_proto_rawDescGZIP(), []int{3}
}

func (x *CookieFormat) GetBookieHost() string {
	if x != nil && x.BookieHost != nil {
		return *x.BookieHost
	}
	return ""
}

func (x *CookieFormat) GetJournalDir() string {
	if x != nil && x.JournalDir != nil {
		return *x.JournalDir
	}
	return ""
}

func (x *CookieFormat) GetLedgerDirs() string {
	if x != nil && x.LedgerDirs != nil {
		return *x.LedgerDirs
	}
	return ""
}

func (x *CookieFormat) GetInstanceId() string {
	if x != nil && x.InstanceId != nil {
		return *x.InstanceId
	}
	return ""
}

func (x *CookieFormat) GetIndexDirs() string {
	if x != nil && x.IndexDirs != nil {
		return *x.IndexDirs
	}
	return ""
}

//*
// Debug information for locks
type LockDataFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookieId *string `protobuf:"bytes,1,opt,name=bookieId" json:"bookieId,omitempty"`
}

func (x *LockDataFormat) Reset() {
	*x = LockDataFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataFormats_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockDataFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockDataFormat) ProtoMessage() {}

func (x *LockDataFormat) ProtoReflect() protoreflect.Message {
	mi := &file_DataFormats_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockDataFormat.ProtoReflect.Descriptor instead.
func (*LockDataFormat) Descriptor() ([]byte, []int) {
	return file_DataFormats_proto_rawDescGZIP(), []int{4}
}

func (x *LockDataFormat) GetBookieId() string {
	if x != nil && x.BookieId != nil {
		return *x.BookieId
	}
	return ""
}

//*
// Debug information for auditor votes
type AuditorVoteFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BookieId *string `protobuf:"bytes,1,opt,name=bookieId" json:"bookieId,omitempty"`
}

func (x *AuditorVoteFormat) Reset() {
	*x = AuditorVoteFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataFormats_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditorVoteFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditorVoteFormat) ProtoMessage() {}

func (x *AuditorVoteFormat) ProtoReflect() protoreflect.Message {
	mi := &file_DataFormats_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditorVoteFormat.ProtoReflect.Descriptor instead.
func (*AuditorVoteFormat) Descriptor() ([]byte, []int) {
	return file_DataFormats_proto_rawDescGZIP(), []int{5}
}

func (x *AuditorVoteFormat) GetBookieId() string {
	if x != nil && x.BookieId != nil {
		return *x.BookieId
	}
	return ""
}

//*
// information of checkAllLedgers execution
type CheckAllLedgersFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckAllLedgersCTime *int64 `protobuf:"varint,1,opt,name=checkAllLedgersCTime" json:"checkAllLedgersCTime,omitempty"`
}

func (x *CheckAllLedgersFormat) Reset() {
	*x = CheckAllLedgersFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataFormats_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAllLedgersFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAllLedgersFormat) ProtoMessage() {}

func (x *CheckAllLedgersFormat) ProtoReflect() protoreflect.Message {
	mi := &file_DataFormats_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAllLedgersFormat.ProtoReflect.Descriptor instead.
func (*CheckAllLedgersFormat) Descriptor() ([]byte, []int) {
	return file_DataFormats_proto_rawDescGZIP(), []int{6}
}

func (x *CheckAllLedgersFormat) GetCheckAllLedgersCTime() int64 {
	if x != nil && x.CheckAllLedgersCTime != nil {
		return *x.CheckAllLedgersCTime
	}
	return 0
}

//*
// information of PlacementPolicyCheck execution
type PlacementPolicyCheckFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlacementPolicyCheckCTime *int64 `protobuf:"varint,1,opt,name=placementPolicyCheckCTime" json:"placementPolicyCheckCTime,omitempty"`
}

func (x *PlacementPolicyCheckFormat) Reset() {
	*x = PlacementPolicyCheckFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataFormats_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlacementPolicyCheckFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlacementPolicyCheckFormat) ProtoMessage() {}

func (x *PlacementPolicyCheckFormat) ProtoReflect() protoreflect.Message {
	mi := &file_DataFormats_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlacementPolicyCheckFormat.ProtoReflect.Descriptor instead.
func (*PlacementPolicyCheckFormat) Descriptor() ([]byte, []int) {
	return file_DataFormats_proto_rawDescGZIP(), []int{7}
}

func (x *PlacementPolicyCheckFormat) GetPlacementPolicyCheckCTime() int64 {
	if x != nil && x.PlacementPolicyCheckCTime != nil {
		return *x.PlacementPolicyCheckCTime
	}
	return 0
}

//*
// information of ReplicasCheck execution
type ReplicasCheckFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplicasCheckCTime *int64 `protobuf:"varint,1,opt,name=replicasCheckCTime" json:"replicasCheckCTime,omitempty"`
}

func (x *ReplicasCheckFormat) Reset() {
	*x = ReplicasCheckFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataFormats_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplicasCheckFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplicasCheckFormat) ProtoMessage() {}

func (x *ReplicasCheckFormat) ProtoReflect() protoreflect.Message {
	mi := &file_DataFormats_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplicasCheckFormat.ProtoReflect.Descriptor instead.
func (*ReplicasCheckFormat) Descriptor() ([]byte, []int) {
	return file_DataFormats_proto_rawDescGZIP(), []int{8}
}

func (x *ReplicasCheckFormat) GetReplicasCheckCTime() int64 {
	if x != nil && x.ReplicasCheckCTime != nil {
		return *x.ReplicasCheckCTime
	}
	return 0
}

//*
// information about services exposed by a Bookie.
type BookieServiceInfoFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Endpoints  []*BookieServiceInfoFormat_Endpoint `protobuf:"bytes,6,rep,name=endpoints" json:"endpoints,omitempty"`
	Properties map[string]string                   `protobuf:"bytes,7,rep,name=properties" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (x *BookieServiceInfoFormat) Reset() {
	*x = BookieServiceInfoFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataFormats_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookieServiceInfoFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookieServiceInfoFormat) ProtoMessage() {}

func (x *BookieServiceInfoFormat) ProtoReflect() protoreflect.Message {
	mi := &file_DataFormats_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookieServiceInfoFormat.ProtoReflect.Descriptor instead.
func (*BookieServiceInfoFormat) Descriptor() ([]byte, []int) {
	return file_DataFormats_proto_rawDescGZIP(), []int{9}
}

func (x *BookieServiceInfoFormat) GetEndpoints() []*BookieServiceInfoFormat_Endpoint {
	if x != nil {
		return x.Endpoints
	}
	return nil
}

func (x *BookieServiceInfoFormat) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

type LedgerMetadataFormat_Segment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnsembleMember []string `protobuf:"bytes,1,rep,name=ensembleMember" json:"ensembleMember,omitempty"`
	FirstEntryId   *int64   `protobuf:"varint,2,req,name=firstEntryId" json:"firstEntryId,omitempty"`
}

func (x *LedgerMetadataFormat_Segment) Reset() {
	*x = LedgerMetadataFormat_Segment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataFormats_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LedgerMetadataFormat_Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerMetadataFormat_Segment) ProtoMessage() {}

func (x *LedgerMetadataFormat_Segment) ProtoReflect() protoreflect.Message {
	mi := &file_DataFormats_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerMetadataFormat_Segment.ProtoReflect.Descriptor instead.
func (*LedgerMetadataFormat_Segment) Descriptor() ([]byte, []int) {
	return file_DataFormats_proto_rawDescGZIP(), []int{0, 0}
}

func (x *LedgerMetadataFormat_Segment) GetEnsembleMember() []string {
	if x != nil {
		return x.EnsembleMember
	}
	return nil
}

func (x *LedgerMetadataFormat_Segment) GetFirstEntryId() int64 {
	if x != nil && x.FirstEntryId != nil {
		return *x.FirstEntryId
	}
	return 0
}

type LedgerMetadataFormatCMetadataMapEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value []byte  `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *LedgerMetadataFormatCMetadataMapEntry) Reset() {
	*x = LedgerMetadataFormatCMetadataMapEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataFormats_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LedgerMetadataFormatCMetadataMapEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LedgerMetadataFormatCMetadataMapEntry) ProtoMessage() {}

func (x *LedgerMetadataFormatCMetadataMapEntry) ProtoReflect() protoreflect.Message {
	mi := &file_DataFormats_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LedgerMetadataFormatCMetadataMapEntry.ProtoReflect.Descriptor instead.
func (*LedgerMetadataFormatCMetadataMapEntry) Descriptor() ([]byte, []int) {
	return file_DataFormats_proto_rawDescGZIP(), []int{0, 1}
}

func (x *LedgerMetadataFormatCMetadataMapEntry) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *LedgerMetadataFormatCMetadataMapEntry) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

//*
// Information about an endpoint.
type BookieServiceInfoFormat_Endpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *string  `protobuf:"bytes,1,req,name=id" json:"id,omitempty"`
	Port       *int32   `protobuf:"varint,2,req,name=port" json:"port,omitempty"`
	Host       *string  `protobuf:"bytes,3,req,name=host" json:"host,omitempty"`
	Protocol   *string  `protobuf:"bytes,4,req,name=protocol" json:"protocol,omitempty"`
	Auth       []string `protobuf:"bytes,5,rep,name=auth" json:"auth,omitempty"`
	Extensions []string `protobuf:"bytes,6,rep,name=extensions" json:"extensions,omitempty"`
}

func (x *BookieServiceInfoFormat_Endpoint) Reset() {
	*x = BookieServiceInfoFormat_Endpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_DataFormats_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BookieServiceInfoFormat_Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BookieServiceInfoFormat_Endpoint) ProtoMessage() {}

func (x *BookieServiceInfoFormat_Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_DataFormats_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BookieServiceInfoFormat_Endpoint.ProtoReflect.Descriptor instead.
func (*BookieServiceInfoFormat_Endpoint) Descriptor() ([]byte, []int) {
	return file_DataFormats_proto_rawDescGZIP(), []int{9, 0}
}

func (x *BookieServiceInfoFormat_Endpoint) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *BookieServiceInfoFormat_Endpoint) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *BookieServiceInfoFormat_Endpoint) GetHost() string {
	if x != nil && x.Host != nil {
		return *x.Host
	}
	return ""
}

func (x *BookieServiceInfoFormat_Endpoint) GetProtocol() string {
	if x != nil && x.Protocol != nil {
		return *x.Protocol
	}
	return ""
}

func (x *BookieServiceInfoFormat_Endpoint) GetAuth() []string {
	if x != nil {
		return x.Auth
	}
	return nil
}

func (x *BookieServiceInfoFormat_Endpoint) GetExtensions() []string {
	if x != nil {
		return x.Extensions
	}
	return nil
}

var File_DataFormats_proto protoreflect.FileDescriptor

var file_DataFormats_proto_rawDesc = []byte{
	0x0a, 0x11, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x87, 0x06, 0x0a, 0x14, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05,
	0x52, 0x0a, 0x71, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x65, 0x6e, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x0c, 0x65, 0x6e, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x02, 0x28, 0x03,
	0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c,
	0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x4c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x3a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x0a,
	0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x20, 0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63,
	0x6b, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x61, 0x63, 0x6b, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x4f, 0x0a, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27,
	0x2e, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d,
	0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x1a,
	0x55, 0x0a, 0x07, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x6e,
	0x73, 0x65, 0x6d, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0e, 0x65, 0x6e, 0x73, 0x65, 0x6d, 0x62, 0x6c, 0x65, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x1a, 0x3b, 0x0a, 0x11, 0x63, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x2e, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4f, 0x50, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x43,
	0x4f, 0x56, 0x45, 0x52, 0x59, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x4c, 0x4f, 0x53, 0x45,
	0x44, 0x10, 0x03, 0x22, 0x38, 0x0a, 0x0a, 0x44, 0x69, 0x67, 0x65, 0x73, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x52, 0x43, 0x33, 0x32, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x48, 0x4d, 0x41, 0x43, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x52, 0x43, 0x33, 0x32, 0x43,
	0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x55, 0x4d, 0x4d, 0x59, 0x10, 0x04, 0x22, 0x4f, 0x0a,
	0x1f, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x52, 0x65, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4d,
	0x0a, 0x1b, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x64, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x22, 0xac, 0x01,
	0x0a, 0x0c, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x69, 0x72, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x0a, 0x6a, 0x6f, 0x75, 0x72, 0x6e, 0x61, 0x6c, 0x44, 0x69, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x44, 0x69, 0x72, 0x73, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x44, 0x69, 0x72, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x69, 0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x69, 0x72, 0x73, 0x22, 0x2c, 0x0a, 0x0e,
	0x4c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x11, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x49, 0x64, 0x22, 0x4b, 0x0a, 0x15, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x41, 0x6c, 0x6c, 0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x6c, 0x6c,
	0x4c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x73, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x14, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x6c, 0x6c, 0x4c, 0x65, 0x64, 0x67,
	0x65, 0x72, 0x73, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x1a, 0x50, 0x6c, 0x61, 0x63,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x3c, 0x0a, 0x19, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x19, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x45, 0x0a, 0x13, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x72,
	0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x43, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xf8, 0x02, 0x0a, 0x17,
	0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x3f, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x42, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x2e, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x09, 0x65,
	0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x48, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x1a, 0x92, 0x01, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x26, 0x0a, 0x1b, 0x6f, 0x72, 0x67, 0x2e, 0x61, 0x70,
	0x61, 0x63, 0x68, 0x65, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x48, 0x01, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62,
}

var (
	file_DataFormats_proto_rawDescOnce sync.Once
	file_DataFormats_proto_rawDescData = file_DataFormats_proto_rawDesc
)

func file_DataFormats_proto_rawDescGZIP() []byte {
	file_DataFormats_proto_rawDescOnce.Do(func() {
		file_DataFormats_proto_rawDescData = protoimpl.X.CompressGZIP(file_DataFormats_proto_rawDescData)
	})
	return file_DataFormats_proto_rawDescData
}

var file_DataFormats_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_DataFormats_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_DataFormats_proto_goTypes = []interface{}{
	(LedgerMetadataFormat_State)(0),               // 0: LedgerMetadataFormat.State
	(LedgerMetadataFormat_DigestType)(0),          // 1: LedgerMetadataFormat.DigestType
	(*LedgerMetadataFormat)(nil),                  // 2: LedgerMetadataFormat
	(*LedgerRereplicationLayoutFormat)(nil),       // 3: LedgerRereplicationLayoutFormat
	(*UnderreplicatedLedgerFormat)(nil),           // 4: UnderreplicatedLedgerFormat
	(*CookieFormat)(nil),                          // 5: CookieFormat
	(*LockDataFormat)(nil),                        // 6: LockDataFormat
	(*AuditorVoteFormat)(nil),                     // 7: AuditorVoteFormat
	(*CheckAllLedgersFormat)(nil),                 // 8: CheckAllLedgersFormat
	(*PlacementPolicyCheckFormat)(nil),            // 9: PlacementPolicyCheckFormat
	(*ReplicasCheckFormat)(nil),                   // 10: ReplicasCheckFormat
	(*BookieServiceInfoFormat)(nil),               // 11: BookieServiceInfoFormat
	(*LedgerMetadataFormat_Segment)(nil),          // 12: LedgerMetadataFormat.Segment
	(*LedgerMetadataFormatCMetadataMapEntry)(nil), // 13: LedgerMetadataFormat.cMetadataMapEntry
	(*BookieServiceInfoFormat_Endpoint)(nil),      // 14: BookieServiceInfoFormat.Endpoint
	nil,                                           // 15: BookieServiceInfoFormat.PropertiesEntry
}
var file_DataFormats_proto_depIdxs = []int32{
	0,  // 0: LedgerMetadataFormat.state:type_name -> LedgerMetadataFormat.State
	12, // 1: LedgerMetadataFormat.segment:type_name -> LedgerMetadataFormat.Segment
	1,  // 2: LedgerMetadataFormat.digestType:type_name -> LedgerMetadataFormat.DigestType
	13, // 3: LedgerMetadataFormat.customMetadata:type_name -> LedgerMetadataFormat.cMetadataMapEntry
	14, // 4: BookieServiceInfoFormat.endpoints:type_name -> BookieServiceInfoFormat.Endpoint
	15, // 5: BookieServiceInfoFormat.properties:type_name -> BookieServiceInfoFormat.PropertiesEntry
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_DataFormats_proto_init() }
func file_DataFormats_proto_init() {
	if File_DataFormats_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_DataFormats_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LedgerMetadataFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataFormats_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LedgerRereplicationLayoutFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataFormats_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnderreplicatedLedgerFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataFormats_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CookieFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataFormats_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockDataFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataFormats_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditorVoteFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataFormats_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAllLedgersFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataFormats_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlacementPolicyCheckFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataFormats_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplicasCheckFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataFormats_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookieServiceInfoFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataFormats_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LedgerMetadataFormat_Segment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataFormats_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LedgerMetadataFormatCMetadataMapEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_DataFormats_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BookieServiceInfoFormat_Endpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_DataFormats_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_DataFormats_proto_goTypes,
		DependencyIndexes: file_DataFormats_proto_depIdxs,
		EnumInfos:         file_DataFormats_proto_enumTypes,
		MessageInfos:      file_DataFormats_proto_msgTypes,
	}.Build()
	File_DataFormats_proto = out.File
	file_DataFormats_proto_rawDesc = nil
	file_DataFormats_proto_goTypes = nil
	file_DataFormats_proto_depIdxs = nil
}
